{% extends "enupalslider/_layouts/base" %}
{% import "_includes/forms" as forms %}
{% css %}
	.enupal-field-heading {
		background-color: rgb(244, 245, 246);
		color: rgb(85, 85, 85);
		font-size: .8em;
		min-height: auto;
		padding: 8px auto;
		text-transform: uppercase;
	}
{% endcss %}
{% set crumbs = [
	{ label: "Sliders"|t, url: url('enupalslider/sliders') }
] %}

{% set title = sliderId ? 'Edit Slider' : 'New Slider' %}

{% set fullPageForm = true %}
{% set saveShortcutRedirect = continueEditingUrl %}

{% set saveButton %}
	<input type="hidden" name="action" value="enupalslider/sliders/save-slider">
	{{ redirectInput('enupalslider/sliders') }}
	<input type="hidden" id="sliderId" name="id" value="{{ slider.id is defined ? slider.id : '' }}">

	<div class="btngroup submit first">
		<input type="submit" class="btn submit" value="{{ 'Save'|t('enupalslider') }}">
		{% if slider.id != null %}
		<div class="btn submit menubtn"></div>
		<div class="menu">
			<ul>
				<li><a class="formsubmit" data-redirect="{{('enupalslider/sliders/edit/'~slider.id)|hash}}">{{ "Save and continue editing"|t }} <span class="shortcut">âŒ˜S</span></a></li>
				<li><a class="formsubmit" data-redirect="{{'enupalslider/sliders/edit/'~slider.id|hash}}" data-param='saveAsNew' data-value="true">{{ "Save as a new slider"|t('enupalslider') }}</a></li>
			</ul>
		</div>
		{% endif %}
	</div>
{% endset %}

{% block main %}

	<input type="hidden" name="action" value="enupalslider/sliders/save-slider">
	<input type="hidden" name="handle" value="{{ slider.handle }}">
	<input type="hidden" name="sliderId" value="{{ sliderId }}">

	{% if namespace is not defined %}{% set namespace = 'fields' %}{% endif %}

	<div class="grid first" data-max-cols="3">
		<div class="item" data-position="left" data-min-colspan="2" data-max-colspan="3">
			<div id="fields" class="pane">

				{{ forms.field({
					label: 'Slides'|t('enupalslider'),
					instructions: 'Slides that represents your content that will display in the slider. Double click if you want add HTML instead.'|t('enupalslider'),
					id: 'slides'
					}, forms.elementSelect({
					elements: slidesElements,
					elementType: elementType,
					sources: sources,
					id: 'slides',
					name: 'slides',
					jsClass: 'Craft.AssetSelectInput',
					addButtonLabel: 'Select Image'|t('enupalslider'),
					limit: null,
					viewMode: 'large',
					criteria: {siteId : null}
				})) }}
				{#limit: 1,
					criteria: {"localeEnabled":null}
				#}
			</div>
		</div>
		<div class="item" data-position="right" data-colspan="1">
			<div class="pane meta">

				{{ forms.textField({
					label: "Name"|t('enupalslider'),
					id: 'name',
					name: 'name',
					value: slider.name,
					required: true,
					errors: slider.getErrors('name')
				}) }}

				{{ forms.textField({
					label: "Handle"|t('enupalslider'),
					id: 'handle',
					name: 'handle',
					required: true,
					value: slider.handle,
					errors: slider.getErrors('handle')
				}) }}

				<div class="field enupal-field-heading">{{'General Options'|t('enupalslider')}}</div>

				{% set modeOptions = craft.enupalslider.getModes() %}
				{% set easingOptions = craft.enupalslider.getEasingOptions() %}
				{% set preloadImagesOptions = craft.enupalslider.getPreloadImagesOptions() %}

				{{ forms.selectField({
					label: "Mode <span class='info'>Type of transition between slides.</span>"|t('enupalslider'),
					id: 'mode',
					name: 'mode',
					options: modeOptions,
					value: slider.mode,
					errors: slider.getErrors('mode')
				}) }}

				{{ forms.textField({
					label: "Speed <span class='info'>Slide transition duration (in ms).</span>"|t('enupalslider'),
					id: 'speed',
					name: 'speed',
					value: slider.speed,
					errors: slider.getErrors('speed')
				}) }}

				{{ forms.lightswitchField({
					label: "Random Start <span class='info'>Start slider on a random slide</span>"|t('enupalslider'),
					id: 'randomStart',
					name: 'randomStart',
					on: slider.randomStart,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.lightswitchField({
					label: "Infinite Loop <span class='info'>If checked, clicking 'Next' while on the last slide will transition to the first slide and vice-versa.</span>"|t('sproutforms'),
					id: 'infiniteLoop',
					name: 'infiniteLoop',
					on: slider.infiniteLoop,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}
				<div class="field enupal-field-heading">{{'Ticker Options'|t('enupalslider')}}</div>
				{{ forms.lightswitchField({
					label: "Captions <span class='info'>Include image captions.</span>"|t('sproutforms'),
					id: 'hasCaptions',
					name: 'hasCaptions',
					on: slider.hasCaptions,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.lightswitchField({
					label: "Ticker <span class='info'>Use slider in ticker mode (similar to a news ticker).</span>"|t('sproutforms'),
					id: 'isTicker',
					name: 'isTicker',
					on: slider.isTicker,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.lightswitchField({
					label: "Ticker Hover <span class='info'>Ticker will pause when mouse hovers over slider. Note: this functionality does NOT work if using CSS transitions!</span>"|t('sproutforms'),
					id: 'tickerHover',
					name: 'tickerHover',
					on: slider.tickerHover,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}
				<div class="field enupal-field-heading">{{'Slider Options'|t('enupalslider')}}</div>
				{{ forms.textField({
					label: "Random Start <span class='info'>Dynamically adjust slider height based on each slide's height.</span>"|t('enupalslider'),
					id: 'adaptiveHeight',
					name: 'adaptiveHeight',
					value: slider.adaptiveHeight,
					errors: slider.getErrors('adaptiveHeight')
				}) }}

				{{ forms.lightswitchField({
					label: "Adaptive Height Speed <span class='info'>Slide height transition duration (in ms). Note: only used if Adaptive Height is checked.</span>"|t('sproutforms'),
					id: 'adaptiveHeightSpeed',
					name: 'adaptiveHeightSpeed',
					on: slider.adaptiveHeightSpeed,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.lightswitchField({
					label: "Has Video? <span class='info'>Check this if any slides contain a video.</span>"|t('sproutforms'),
					id: 'hasVideo',
					name: 'hasVideo',
					on: slider.hasVideo,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.lightswitchField({
					label: "Responsive <span class='info'>Enable or disable auto resize of the slider. Useful if you need to use fixed width sliders.</span>"|t('sproutforms'),
					id: 'responsive',
					name: 'responsive',
					on: slider.responsive,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}
				<div class="field enupal-field-heading">{{'Transitions Options'|t('enupalslider')}}</div>
				{{ forms.lightswitchField({
					label: "Use Css <span class='info'>If checked, CSS transitions will be used for horizontal and vertical slide animations (this uses native hardware acceleration). If unchecked, jQuery animate() will be used.</span>"|t('sproutforms'),
					id: 'useCss',
					name: 'useCss',
					on: slider.useCss,
					onLabel: "On"|t('sproutforms'),
					offLabel: "Off"|t('sproutforms')
				}) }}

				{{ forms.selectField({
					label: "Easing <span class='info'>The type of 'easing' to use during transitions.</span>"|t('enupalslider'),
					id: 'easing',
					name: 'easing',
					options: easingOptions,
					value: slider.easing,
					errors: slider.getErrors('easing')
				}) }}

				{{ forms.selectField({
					label: "Preload Images <span class='info'>If 'all', preloads all images before starting the slider. If 'visible', preloads only images in the initially visible slides before starting the slider (tip: use 'visible' if all slides are identical dimensions).</span>"|t('enupalslider'),
					id: 'preloadImages',
					name: 'preloadImages',
					options: preloadImagesOptions,
					value: slider.preloadImages,
					errors: slider.getErrors('preloadImages')
				}) }}

				<div class="field" id="enabled-field">
					<div class="heading"></div>
					<div class="input">
						<div class="right">
							<input type="button" class="btn small formsubmit" value="Delete" data-action="enupalslider/entries/delete-slider" data-confirm="Are you sure you want to delete this slider and all of it's data?" data-redirect="enupalslider/sliders">
						</div>
					</div>
				</div>

			</div>
		</div>
	</div>

{% endblock %}

